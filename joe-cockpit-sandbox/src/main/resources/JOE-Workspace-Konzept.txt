Beispiel für einen JOE-Workspace:

1) Section pro JobScheduler Instanz  [server_portno]
2) name-value pairs

	JobSchedulerUrl=https:// ....
	JobSchedulerConfigFolder=Path-to-config oder den JS per cmd fragen, wo das config-verzeichnis liegt.
	
	a) wie wird der Zugriff definiert, wenn es nicht das lokale FileSystem ist? Denn der JS liefert einen lokalen Pfad für den Server auf dem die Instanz läuft.
	   Damit ist ein Zugirff vai sFTP/FTP/FPTS UNC ... CIFS nicht möglich
	   Beispiel: SFTP://user:password@server/pfadname
	   oder credentialStore wie bei JADE
	b) Parameter wie bei JADE verwenden.
	c) Zugriff auf das FileSystem der Scheduler-Instanz via Scheduler-Commands. Ändern, lesen und schreiben der Objekte ebenfalls darüber. Das erspart das Einrichten/Verwalten eines Servers für den Dateitransfer.
	   Damit kann auch ein "syntax-check" über die JS instanz durchgeführt werden und es werden Fehler entdeckt, die im XSD nicht abbildbar und/oder gefunden werden
	   Steuern über useJobSchedulerAsDataProvider=true|false
	   
	d) Jetty als Dataprovider verwenden, REST-Service benutzen für Verzeichnis, Datei holen, Datei speichern, Datei neu anlegen.
	
3) Optionen-Datei zentral speichern?

